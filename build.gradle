plugins { id "com.github.johnrengelman.shadow" version "2.0.1" }
plugins { id "org.sonarqube" version "2.6.1" }
plugins { id "org.owasp.dependencycheck" version "3.1.2"}
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'jacoco'

description = 'payment-method-p24'
group 'com.payline'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    paymentMethodVersion = '0.11-SNAPSHOT'
    powerMockVersion = '1.7.0'
    releaseDirectoryPath = 'D:/build'
}

sonarqube {
    properties {
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property 'sonar.dependencyCheck.htmlReportPath', "${project.buildDir}/reports/dependency-check-report.html"
    }
}

dependencyCheck {
    format 'ALL'
}


dependencies {
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
    compileOnly "com.payline:payment-method-api:${paymentMethodVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'

    // JUnit and Mockito
    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-core:1.+"

    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.13.0'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.13.0'
    testImplementation "com.payline:payment-method-api:${paymentMethodVersion}"

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.0.3'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.3'
}

assemble.dependsOn shadowJar

shadowJar {
    classifier = ''
    dependencies {
        exclude(dependency('com.payline:payment-method-api'))
        exclude(dependency('org.apache.logging.log4j:log4j-api:2.11.0'))
        exclude(dependency('org.apache.logging.log4j:log4j-core:2.11.0'))
        exclude(dependency('org.junit.jupiter:junit-jupiter-params:5.0.3'))
        exclude(dependency('org.junit.jupiter:junit-jupiter-api:5.0.3'))
        exclude(dependency('org.seleniumhq.selenium:selenium-server:3.13.0'))
        exclude(dependency('org.seleniumhq.selenium:selenium-support:3.13.0'))
    }
}

publishing {
    repositories {
        maven {
            if (project.version.endsWith('-SNAPSHOT')) {
                url "https://nexus.intra.monext.fr:10130/nexus/content/repositories/jindus-repo-pay-pay-snapshot/"
            } else {
                url "https://nexus.intra.monext.fr:10130/nexus/content/repositories/jindus-repo-pay-pay-public/"
            }
            credentials {
                username mavenUser
                password mavenPassword
            }
        }
    }
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://nexus.intra.monext.fr:10130/nexus/content/repositories/jindus-repo-pay-pay-public/"
        credentials {
            username mavenUser
            password mavenPassword
        }
    }
    maven {
        url "https://nexus.intra.monext.fr:10130/nexus/content/groups/public"
        credentials {
            username mavenUser
            password mavenPassword
        }
    }
    maven {
        url "https://nexus.intra.monext.fr:10130/nexus/content/repositories/jindus-repo-pay-pay-snapshot/"
        credentials {
            username mavenUser
            password mavenPassword
        }
    }
}


task buildToLocal(type: Copy) {
    dependsOn shadowJar
    from shadowJar
    into "${releaseDirectoryPath}"
}

task printVersion {
    doLast {
        println version
    }
}

test.exclude '**/test/integration/*'




